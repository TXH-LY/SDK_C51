C51 COMPILER V9.60.0.0   HW_GTIMER                                                         06/25/2021 20:51:20 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE HW_GTIMER
OBJECT MODULE PLACED IN .\Objects\hw_Gtimer.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\..\HW_Config\hw_Gtimer.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..\..\
                    -HW_Config;..\..\HW_Driver\driver_header;..\..\HW_Driver;..\..\SDKProject;..\..\SW_Support;..\..\SW_Support\header;..\..\
                    -usercode) DEBUG OBJECTEXTEND PRINT(.\Listings\hw_Gtimer.lst) OBJECT(.\Objects\hw_Gtimer.obj)

line level    source

   1          #include "hw_Gtimer.h"
   2          
   3          #ifdef GTIMER_CONFIG
   4          
   5          
   6          /* ------------------------------------------------------------ */
   7          
   8          static GTimerQueue   GTimerOBJ;
   9          
  10          
  11          
  12          
  13          static char GTimer_function (void *arg) 
  14          {
  15   1              void *ptr = arg;
  16   1      
  17   1              if (GTimerOBJ.GTimer0_s == 2) {
  18   2                      GTimerOBJ.GTimerGroup[0].member_func_pointer (GTimerOBJ.GTimerGroup[0].member_func_arg);
  19   2              }
  20   1              if (GTimerOBJ.GTimer1_s == 2) {
  21   2                      GTimerOBJ.GTimerGroup[1].member_func_pointer (GTimerOBJ.GTimerGroup[1].member_func_arg);
  22   2              }
  23   1              if (GTimerOBJ.GTimer2_s == 2) {
  24   2                      GTimerOBJ.GTimerGroup[2].member_func_pointer (GTimerOBJ.GTimerGroup[2].member_func_arg);
  25   2              }
  26   1              if (GTimerOBJ.GTimer3_s == 2) {
  27   2                      GTimerOBJ.GTimerGroup[3].member_func_pointer (GTimerOBJ.GTimerGroup[3].member_func_arg);
  28   2              }
  29   1      
  30   1              return 0;
  31   1      }
  32          
  33          
  34          
  35          
  36          
  37          static char GTimerOBJ_Findinvain(void);
  38          static char GTimerOBJ_push(uchar status);
  39          static char GTimerOBJ_pop(uchar status);
  40          /* ------------------------------------------------------------ */
  41          
  42          void GTimer_Init (void)
  43          {
  44   1              memset (&GTimerOBJ, 0, sizeof(GTimerOBJ));
  45   1              GTimerOBJ.GTimer0_s = 0;
  46   1              GTimerOBJ.GTimer1_s = 0;
  47   1              GTimerOBJ.GTimer2_s = 0;
  48   1              GTimerOBJ.GTimer3_s = 0;
  49   1              Timer2Init(TIMER2_MODE_TIMING, 10000, GTimer_function);
  50   1      }
  51          
  52          void GTimer_Start (void)
  53          {
C51 COMPILER V9.60.0.0   HW_GTIMER                                                         06/25/2021 20:51:20 PAGE 2   

  54   1              
  55   1      }
  56          
  57          void GTimer_Stop (void)
  58          {
  59   1              
  60   1      }
  61          
  62          
  63          
  64          
  65          
  66          char GTimer_OBJJoin (void* funcptr, void* funcarg)
  67          {
  68   1              char status = -1;
  69   1              status = GTimerOBJ_Findinvain ();
  70   1              if (status < 0) {
  71   2                      return -1;
  72   2              } else {
  73   2                      GTimerOBJ.GTimerGroup[status].member_func_pointer = funcptr;
  74   2                      GTimerOBJ.GTimerGroup[status].member_func_arg     = funcarg;
  75   2                      GTimerOBJ_push (status);
  76   2              }
  77   1      
  78   1              return 0;
  79   1      }
  80          
  81          
  82          
  83          char GTimer_OBJRemove (void* funcptr)
  84          {
  85   1              if (GTimerOBJ.GTimer0_s != 0) {
  86   2                      if (GTimerOBJ.GTimerGroup[0].member_func_pointer == funcptr) {
  87   3                              GTimerOBJ_pop (0);
  88   3                              return 0;
  89   3                      }
  90   2              }
  91   1              if (GTimerOBJ.GTimer1_s != 0) {
  92   2                      if (GTimerOBJ.GTimerGroup[1].member_func_pointer == funcptr) {
  93   3                              GTimerOBJ_pop (1);
  94   3                              return 1;
  95   3                      }
  96   2              }
  97   1              if (GTimerOBJ.GTimer2_s != 0) {
  98   2                      if (GTimerOBJ.GTimerGroup[2].member_func_pointer == funcptr) {
  99   3                              GTimerOBJ_pop (2);
 100   3                              return 2;
 101   3                      }
 102   2              }
 103   1              if (GTimerOBJ.GTimer3_s != 0) {
 104   2                      if (GTimerOBJ.GTimerGroup[3].member_func_pointer == funcptr) {
 105   3                              GTimerOBJ_pop (3);
 106   3                              return 3;
 107   3                      }
 108   2              }
 109   1              return -1;
 110   1      }
 111          
 112          
 113          char GTimer_OBJRun (void* funcptr)
 114          {
 115   1              if (GTimerOBJ.GTimer0_s == 1) {
C51 COMPILER V9.60.0.0   HW_GTIMER                                                         06/25/2021 20:51:20 PAGE 3   

 116   2                      if (GTimerOBJ.GTimerGroup[0].member_func_pointer == funcptr) {
 117   3                              GTimerOBJ.GTimer0_s = 2;
 118   3                              return 0;
 119   3                      }
 120   2              }
 121   1              if (GTimerOBJ.GTimer1_s == 1) {
 122   2                      if (GTimerOBJ.GTimerGroup[1].member_func_pointer == funcptr) {
 123   3                              GTimerOBJ.GTimer1_s = 2;
 124   3                              return 1;
 125   3                      }
 126   2              }
 127   1              if (GTimerOBJ.GTimer2_s == 1) {
 128   2                      if (GTimerOBJ.GTimerGroup[2].member_func_pointer == funcptr) {
 129   3                              GTimerOBJ.GTimer2_s = 2;
 130   3                              return 2;
 131   3                      }
 132   2              }
 133   1              if (GTimerOBJ.GTimer3_s == 1) {
 134   2                      if (GTimerOBJ.GTimerGroup[3].member_func_pointer == funcptr) {
 135   3                              GTimerOBJ.GTimer3_s = 2;
 136   3                              return 3;
 137   3                      }
 138   2              }
 139   1              
 140   1              return -1;
 141   1      }
 142          
 143          char GTimer_OBJPause (void* funcptr)
 144          {
 145   1              if (GTimerOBJ.GTimer0_s == 2) {
 146   2                      if (GTimerOBJ.GTimerGroup[0].member_func_pointer == funcptr) {
 147   3                              GTimerOBJ.GTimer0_s = 1;
 148   3                              return 0;
 149   3                      }
 150   2              }
 151   1              if (GTimerOBJ.GTimer1_s == 2) {
 152   2                      if (GTimerOBJ.GTimerGroup[1].member_func_pointer == funcptr) {
 153   3                              GTimerOBJ.GTimer1_s = 1;
 154   3                              return 1;
 155   3                      }
 156   2              }
 157   1              if (GTimerOBJ.GTimer2_s == 2) {
 158   2                      if (GTimerOBJ.GTimerGroup[2].member_func_pointer == funcptr) {
 159   3                              GTimerOBJ.GTimer2_s = 1;
 160   3                              return 2;
 161   3                      }
 162   2              }
 163   1              if (GTimerOBJ.GTimer3_s == 2) {
 164   2                      if (GTimerOBJ.GTimerGroup[3].member_func_pointer == funcptr) {
 165   3                              GTimerOBJ.GTimer3_s = 1;
 166   3                              return 3;
 167   3                      }
 168   2              }
 169   1              
 170   1              return -1;
 171   1      }
 172          
 173          
 174          
 175          
 176          /* ------------------------------------------------------------ */
 177          
C51 COMPILER V9.60.0.0   HW_GTIMER                                                         06/25/2021 20:51:20 PAGE 4   

 178          static char GTimerOBJ_Findinvain(void)
 179          {
 180   1              uchar status = -1;
 181   1      
 182   1              if (GTimerOBJ.GTimer0_s == 0) {
 183   2                      status = 0;
 184   2              } else if (GTimerOBJ.GTimer1_s == 0) {
 185   2                      status = 1;
 186   2              } else if (GTimerOBJ.GTimer2_s == 0) {
 187   2                      status = 2;
 188   2              } else if (GTimerOBJ.GTimer3_s == 0) {
 189   2                      status = 3;
 190   2              } else {
 191   2                      status = -1;
 192   2              }
 193   1      
 194   1              return status;
 195   1      }
 196          
 197          static char GTimerOBJ_push(uchar status)
 198          {
 199   1      
 200   1              switch (status)
 201   1              {
 202   2                      case 0:GTimerOBJ.GTimer0_s = 1;break;
 203   2                      case 1:GTimerOBJ.GTimer1_s = 1;break;
 204   2                      case 2:GTimerOBJ.GTimer2_s = 1;break;
 205   2                      case 3:GTimerOBJ.GTimer3_s = 1;break;
 206   2                      default:break;
 207   2              }
 208   1      
 209   1              return 0;
 210   1      }
 211          
 212          static char GTimerOBJ_pop(uchar status)
 213          {
 214   1              
 215   1              switch (status)
 216   1              {
 217   2                      case 0:GTimerOBJ.GTimer0_s = 0;
 218   2                             GTimerOBJ.GTimerGroup[0].member_func_pointer = NULL;
 219   2                             GTimerOBJ.GTimerGroup[0].member_func_arg     = NULL;
 220   2                                 break;
 221   2                      case 1:GTimerOBJ.GTimer1_s = 0;
 222   2                             GTimerOBJ.GTimerGroup[1].member_func_pointer = NULL;
 223   2                             GTimerOBJ.GTimerGroup[1].member_func_arg     = NULL;
 224   2                                 break;
 225   2                      case 2:GTimerOBJ.GTimer2_s = 0;
 226   2                             GTimerOBJ.GTimerGroup[2].member_func_pointer = NULL;
 227   2                             GTimerOBJ.GTimerGroup[2].member_func_arg     = NULL;
 228   2                                 break;
 229   2                      case 3:GTimerOBJ.GTimer3_s = 0;
 230   2                             GTimerOBJ.GTimerGroup[3].member_func_pointer = NULL;
 231   2                             GTimerOBJ.GTimerGroup[3].member_func_arg     = NULL;
 232   2                                 break;
 233   2                      default:break;
 234   2              }
 235   1      
 236   1              return 0;
 237   1      }
 238          
 239          
C51 COMPILER V9.60.0.0   HW_GTIMER                                                         06/25/2021 20:51:20 PAGE 5   

 240          
 241          
 242          
 243          
 244          
 245          
 246          
 247          
 248          
 249          
 250          
 251          #endif /* GTIMER_CONFIG */


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1268    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     28      18
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
