C51 COMPILER V9.60.0.0   HW_TIMER2                                                         06/25/2021 20:51:21 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE HW_TIMER2
OBJECT MODULE PLACED IN .\Objects\hw_Timer2.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\..\HW_Config\hw_Timer2.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..\..\
                    -HW_Config;..\..\HW_Driver\driver_header;..\..\HW_Driver;..\..\SDKProject;..\..\SW_Support;..\..\SW_Support\header;..\..\
                    -usercode) DEBUG OBJECTEXTEND PRINT(.\Listings\hw_Timer2.lst) OBJECT(.\Objects\hw_Timer2.obj)

line level    source

   1          #include "hw_Timer2.h"
   2          
   3          #ifdef TIMER2_CONFIG
   4          
   5          
   6          static u8 timer_h;
   7          static u8 timer_l;
   8          
   9          static bit mode_flg = 0;
  10          
  11          int (*pointer_interupt_timer2)(void *arg);
  12          
  13          static int interupt_timer_function (void *arg) 
  14          {
  15   1              void *ptr = arg;
  16   1              return 0;
  17   1      }
  18          
  19          
  20          
  21          /*******************************************************************************
  22          * 函 数 名         : Timer1Init
  23          * 函数功能                 : 定时器1初始化
  24          * 输    入         : 无
  25          * 输    出         : 无
  26          *******************************************************************************/
  27          void Timer2Init(uint mode, uint us, void *callback)
  28          {
  29   1              switch (mode)
  30   1              {
  31   2                      case TIMER2_MODE_CAPTURE:T2CON=0X09;  //设置T2为捕获模式，下降沿则产生中断
  32   2                                               timer_h = (65536-us) / 256;
  33   2                                               timer_l = (65536-us) % 256;
  34   2                                               break;
  35   2                      case TIMER2_MODE_TIMING :T2CON=0X00;  //设置T2为捕获模式，下降沿则产生中断
  36   2                                               timer_h = (65536-us) / 256;
  37   2                                               timer_l = (65536-us) % 256;
  38   2                                               break;
  39   2                      default:                 return ;
  40   2                                       break;
  41   2              }
  42   1              
  43   1              if (callback == NULL) {
  44   2                      pointer_interupt_timer2 = interupt_timer_function;
  45   2              } else {
  46   2                      pointer_interupt_timer2 = callback;
  47   2              }
  48   1              
  49   1              RCAP2H = timer_h;
  50   1              RCAP2L = timer_l;
  51   1              TH2 = RCAP2H;
  52   1              TL2 = RCAP2L;
  53   1              
C51 COMPILER V9.60.0.0   HW_TIMER2                                                         06/25/2021 20:51:21 PAGE 2   

  54   1              EA  = 1;
  55   1              
  56   1              TR2 = 1;
  57   1              ET2 = 1;
  58   1      }
  59          
  60          
  61          
  62          
  63          void Timer2Init_NoOpen(uint mode, uint us, void *callback)
  64          {
  65   1              TR2   = 0;//关闭定时器
  66   1              ET2   = 0;//关闭定时器1中断允许
  67   1              switch (mode)
  68   1              {
  69   2                      case TIMER2_MODE_CAPTURE:T2CON=0X09;  //设置T2为捕获模式，下降沿则产生中断
  70   2                                               timer_h = (65536-us) / 256;
  71   2                                               timer_l = (65536-us) % 256;
  72   2                                               break;
  73   2                      case TIMER2_MODE_TIMING :T2CON=0X00;  //设置T2为
  74   2                                               timer_h = (65536-us) / 256;
  75   2                                               timer_l = (65536-us) % 256;
  76   2                                               break;
  77   2                      default:                 return ;
  78   2                                       break;
  79   2              }
  80   1              
  81   1              if (callback == NULL) {
  82   2                      pointer_interupt_timer2 = interupt_timer_function;
  83   2              } else {
  84   2                      pointer_interupt_timer2 = callback;
  85   2              }
  86   1              
  87   1              RCAP2H = timer_h;
  88   1              RCAP2L = timer_l;
  89   1              TH2 = RCAP2H;
  90   1              TL2 = RCAP2L;
  91   1              
  92   1              TR2 = 0;
  93   1              ET2 = 0;
  94   1              
  95   1              EA  = 1;
  96   1      }
  97          
  98          void Timer2Open(void)
  99          {
 100   1              ET2   = 1;//打开定时器0中断允许
 101   1              TR2   = 1;//打开定时器
 102   1      }
 103          
 104          void Timer2Close(void)
 105          {
 106   1              TR2   = 0;//关闭定时器
 107   1              ET2   = 0;//关闭定时器0中断允许
 108   1      }
 109          
 110          void Timer2Pause(void)
 111          {
 112   1              TR2   = 0;//关闭定时器
 113   1      }
 114          
 115          void Timer2Start(void)
C51 COMPILER V9.60.0.0   HW_TIMER2                                                         06/25/2021 20:51:21 PAGE 3   

 116          {
 117   1              TR2   = 1;//打开定时器
 118   1      }
 119          
 120          
 121          
 122          
 123          
 124          /*******************************************************************************
 125          * 函 数 名         : void Timer2() interrupt 5
 126          * 函数功能                 : 定时器0中断函数
 127          * 输    入         : 无
 128          * 输    出         : 无
 129          *******************************************************************************/
 130          void Timer2() interrupt 5
 131          {
 132   1              TF2   = 0;
 133   1              
 134   1              pointer_interupt_timer2(NULL);
 135   1              
 136   1      }
 137          #endif /* TIMER2_CONFIG */
 138          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    500    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      5      13
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
